; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Obj\uip-neighbor.o --depend=.\Obj\uip-neighbor.d --device=DARMSTM --apcs=interwork -O0 -I..\..\Libraries\CMSIS\Core\CM3 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Source\inc -I..\..\Libraries\uIP-1.0\apps\webserver -I..\..\Libraries\uIP-1.0\uip -I..\..\Source\src\uIP_enc28j60 -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\uip-neighbor.crf ..\..\Libraries\uIP-1.0\uip\uip-neighbor.c]
                          THUMB

                          AREA ||i.find_entry||, CODE, READONLY, ALIGN=2

                  find_entry PROC
;;;119    static struct neighbor_entry *
;;;120    find_entry(uip_ipaddr_t ipaddr)
000000  4602              MOV      r2,r0
;;;121    {
;;;122      int i;
;;;123    
;;;124      for(i = 0; i < ENTRIES; ++i) {
000002  2100              MOVS     r1,#0
000004  e017              B        |L1.54|
                  |L1.6|
;;;125        if(uip_ipaddr_cmp(entries[i].ipaddr, ipaddr)) {
000006  eb010041          ADD      r0,r1,r1,LSL #1
00000a  4b0d              LDR      r3,|L1.64|
00000c  f8330020          LDRH     r0,[r3,r0,LSL #2]
000010  8813              LDRH     r3,[r2,#0]
000012  4298              CMP      r0,r3
000014  d10e              BNE      |L1.52|
000016  eb010041          ADD      r0,r1,r1,LSL #1
00001a  4b09              LDR      r3,|L1.64|
00001c  eb030080          ADD      r0,r3,r0,LSL #2
000020  8840              LDRH     r0,[r0,#2]
000022  8853              LDRH     r3,[r2,#2]
000024  4298              CMP      r0,r3
000026  d105              BNE      |L1.52|
;;;126          return &entries[i];
000028  eb010041          ADD      r0,r1,r1,LSL #1
00002c  4b04              LDR      r3,|L1.64|
00002e  eb030080          ADD      r0,r3,r0,LSL #2
                  |L1.50|
;;;127        }
;;;128      }
;;;129      return NULL;
;;;130    }
000032  4770              BX       lr
                  |L1.52|
000034  1c49              ADDS     r1,r1,#1              ;124
                  |L1.54|
000036  2908              CMP      r1,#8                 ;124
000038  dbe5              BLT      |L1.6|
00003a  2000              MOVS     r0,#0                 ;129
00003c  e7f9              B        |L1.50|
;;;131    /*---------------------------------------------------------------------------*/
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      ||.bss||

                          AREA ||i.uip_neighbor_add||, CODE, READONLY, ALIGN=2

                  uip_neighbor_add PROC
;;;84     void
;;;85     uip_neighbor_add(uip_ipaddr_t ipaddr, struct uip_neighbor_addr *addr)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;86     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;87       int i, oldest;
;;;88       u8_t oldest_time;
;;;89     
;;;90       printf("Adding neighbor with link address %02x:%02x:%02x:%02x:%02x:%02x\n",
000008  796b              LDRB     r3,[r5,#5]
00000a  792a              LDRB     r2,[r5,#4]
00000c  78e9              LDRB     r1,[r5,#3]
00000e  e88d000e          STM      sp,{r1-r3}
000012  78ab              LDRB     r3,[r5,#2]
000014  786a              LDRB     r2,[r5,#1]
000016  7829              LDRB     r1,[r5,#0]
000018  482b              LDR      r0,|L2.200|
00001a  f7fffffe          BL       __2printf
;;;91     	 addr->addr.addr[0], addr->addr.addr[1], addr->addr.addr[2], addr->addr.addr[3],
;;;92     	 addr->addr.addr[4], addr->addr.addr[5]);
;;;93     
;;;94       /* Find the first unused entry or the oldest used entry. */
;;;95       oldest_time = 0;
00001e  f04f0800          MOV      r8,#0
;;;96       oldest = 0;
000022  2700              MOVS     r7,#0
;;;97       for(i = 0; i < ENTRIES; ++i) {
000024  2600              MOVS     r6,#0
000026  e02c              B        |L2.130|
                  |L2.40|
;;;98         if(entries[i].time == MAX_TIME) {
000028  eb060046          ADD      r0,r6,r6,LSL #1
00002c  4927              LDR      r1,|L2.204|
00002e  eb010080          ADD      r0,r1,r0,LSL #2
000032  7a80              LDRB     r0,[r0,#0xa]
000034  2880              CMP      r0,#0x80
000036  d101              BNE      |L2.60|
;;;99           oldest = i;
000038  4637              MOV      r7,r6
;;;100          break;
00003a  e024              B        |L2.134|
                  |L2.60|
;;;101        }
;;;102        if(uip_ipaddr_cmp(entries[i].ipaddr, addr)) {
00003c  eb060046          ADD      r0,r6,r6,LSL #1
000040  4922              LDR      r1,|L2.204|
000042  f8310020          LDRH     r0,[r1,r0,LSL #2]
000046  8829              LDRH     r1,[r5,#0]
000048  4288              CMP      r0,r1
00004a  d10a              BNE      |L2.98|
00004c  eb060046          ADD      r0,r6,r6,LSL #1
000050  491e              LDR      r1,|L2.204|
000052  eb010080          ADD      r0,r1,r0,LSL #2
000056  8840              LDRH     r0,[r0,#2]
000058  8869              LDRH     r1,[r5,#2]
00005a  4288              CMP      r0,r1
00005c  d101              BNE      |L2.98|
;;;103          oldest = i;
00005e  4637              MOV      r7,r6
;;;104          break;
000060  e011              B        |L2.134|
                  |L2.98|
;;;105        }
;;;106        if(entries[i].time > oldest_time) {
000062  eb060046          ADD      r0,r6,r6,LSL #1
000066  4919              LDR      r1,|L2.204|
000068  eb010080          ADD      r0,r1,r0,LSL #2
00006c  7a80              LDRB     r0,[r0,#0xa]
00006e  4540              CMP      r0,r8
000070  dd06              BLE      |L2.128|
;;;107          oldest = i;
000072  4637              MOV      r7,r6
;;;108          oldest_time = entries[i].time;
000074  eb060046          ADD      r0,r6,r6,LSL #1
000078  eb010080          ADD      r0,r1,r0,LSL #2
00007c  f890800a          LDRB     r8,[r0,#0xa]
                  |L2.128|
000080  1c76              ADDS     r6,r6,#1              ;97
                  |L2.130|
000082  2e08              CMP      r6,#8                 ;97
000084  dbd0              BLT      |L2.40|
                  |L2.134|
000086  bf00              NOP                            ;100
;;;109        }
;;;110      }
;;;111    
;;;112      /* Use the oldest or first free entry (either pointed to by the
;;;113         "oldest" variable). */
;;;114      entries[oldest].time = 0;
000088  2000              MOVS     r0,#0
00008a  eb070147          ADD      r1,r7,r7,LSL #1
00008e  4a0f              LDR      r2,|L2.204|
000090  eb020181          ADD      r1,r2,r1,LSL #2
000094  7288              STRB     r0,[r1,#0xa]
;;;115      uip_ipaddr_copy(entries[oldest].ipaddr, ipaddr);
000096  bf00              NOP      
000098  8820              LDRH     r0,[r4,#0]
00009a  eb070147          ADD      r1,r7,r7,LSL #1
00009e  f8220021          STRH     r0,[r2,r1,LSL #2]
0000a2  8860              LDRH     r0,[r4,#2]
0000a4  eb070147          ADD      r1,r7,r7,LSL #1
0000a8  eb020181          ADD      r1,r2,r1,LSL #2
0000ac  8048              STRH     r0,[r1,#2]
0000ae  bf00              NOP      
;;;116      memcpy(&entries[oldest].addr, addr, sizeof(struct uip_neighbor_addr));
0000b0  eb070147          ADD      r1,r7,r7,LSL #1
0000b4  eb020181          ADD      r1,r2,r1,LSL #2
0000b8  1d08              ADDS     r0,r1,#4
0000ba  2206              MOVS     r2,#6
0000bc  4629              MOV      r1,r5
0000be  f7fffffe          BL       __aeabi_memcpy
;;;117    }
0000c2  e8bd83fe          POP      {r1-r9,pc}
;;;118    /*---------------------------------------------------------------------------*/
                          ENDP

0000c6  0000              DCW      0x0000
                  |L2.200|
                          DCD      ||.constdata||
                  |L2.204|
                          DCD      ||.bss||

                          AREA ||i.uip_neighbor_init||, CODE, READONLY, ALIGN=2

                  uip_neighbor_init PROC
;;;62     void
;;;63     uip_neighbor_init(void)
000000  2000              MOVS     r0,#0
;;;64     {
;;;65       int i;
;;;66     
;;;67       for(i = 0; i < ENTRIES; ++i) {
000002  e007              B        |L3.20|
                  |L3.4|
;;;68         entries[i].time = MAX_TIME;
000004  2180              MOVS     r1,#0x80
000006  eb000240          ADD      r2,r0,r0,LSL #1
00000a  4b04              LDR      r3,|L3.28|
00000c  eb030282          ADD      r2,r3,r2,LSL #2
000010  7291              STRB     r1,[r2,#0xa]
000012  1c40              ADDS     r0,r0,#1              ;67
                  |L3.20|
000014  2808              CMP      r0,#8                 ;67
000016  dbf5              BLT      |L3.4|
;;;69       }
;;;70     }
000018  4770              BX       lr
;;;71     /*---------------------------------------------------------------------------*/
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      ||.bss||

                          AREA ||i.uip_neighbor_lookup||, CODE, READONLY, ALIGN=1

                  uip_neighbor_lookup PROC
;;;143    struct uip_neighbor_addr *
;;;144    uip_neighbor_lookup(uip_ipaddr_t ipaddr)
000000  b570              PUSH     {r4-r6,lr}
;;;145    {
000002  4605              MOV      r5,r0
;;;146      struct neighbor_entry *e;
;;;147    
;;;148      e = find_entry(ipaddr);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       find_entry
00000a  4604              MOV      r4,r0
;;;149      if(e != NULL) {
00000c  b10c              CBZ      r4,|L4.18|
;;;150        /*    printf("Lookup neighbor with link address %02x:%02x:%02x:%02x:%02x:%02x\n",
;;;151    	   e->addr.addr.addr[0], e->addr.addr.addr[1], e->addr.addr.addr[2], e->addr.addr.addr[3],
;;;152    	   e->addr.addr.addr[4], e->addr.addr.addr[5]);*/
;;;153    
;;;154        return &e->addr;
00000e  1d20              ADDS     r0,r4,#4
                  |L4.16|
;;;155      }
;;;156      return NULL;
;;;157    }
000010  bd70              POP      {r4-r6,pc}
                  |L4.18|
000012  2000              MOVS     r0,#0                 ;156
000014  e7fc              B        |L4.16|
;;;158    /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||i.uip_neighbor_periodic||, CODE, READONLY, ALIGN=2

                  uip_neighbor_periodic PROC
;;;72     void
;;;73     uip_neighbor_periodic(void)
000000  2000              MOVS     r0,#0
;;;74     {
;;;75       int i;
;;;76     
;;;77       for(i = 0; i < ENTRIES; ++i) {
000002  e014              B        |L5.46|
                  |L5.4|
;;;78         if(entries[i].time < MAX_TIME) {
000004  eb000140          ADD      r1,r0,r0,LSL #1
000008  4a0a              LDR      r2,|L5.52|
00000a  eb020181          ADD      r1,r2,r1,LSL #2
00000e  7a89              LDRB     r1,[r1,#0xa]
000010  2980              CMP      r1,#0x80
000012  da0b              BGE      |L5.44|
;;;79           entries[i].time++;
000014  eb000140          ADD      r1,r0,r0,LSL #1
000018  eb020181          ADD      r1,r2,r1,LSL #2
00001c  7a89              LDRB     r1,[r1,#0xa]
00001e  1c49              ADDS     r1,r1,#1
000020  eb000240          ADD      r2,r0,r0,LSL #1
000024  4b03              LDR      r3,|L5.52|
000026  eb030282          ADD      r2,r3,r2,LSL #2
00002a  7291              STRB     r1,[r2,#0xa]
                  |L5.44|
00002c  1c40              ADDS     r0,r0,#1              ;77
                  |L5.46|
00002e  2808              CMP      r0,#8                 ;77
000030  dbe8              BLT      |L5.4|
;;;80         }
;;;81       }
;;;82     }
000032  4770              BX       lr
;;;83     /*---------------------------------------------------------------------------*/
                          ENDP

                  |L5.52|
                          DCD      ||.bss||

                          AREA ||i.uip_neighbor_update||, CODE, READONLY, ALIGN=1

                  uip_neighbor_update PROC
;;;132    void
;;;133    uip_neighbor_update(uip_ipaddr_t ipaddr)
000000  b570              PUSH     {r4-r6,lr}
;;;134    {
000002  4604              MOV      r4,r0
;;;135      struct neighbor_entry *e;
;;;136    
;;;137      e = find_entry(ipaddr);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       find_entry
00000a  4605              MOV      r5,r0
;;;138      if(e != NULL) {
00000c  b10d              CBZ      r5,|L6.18|
;;;139        e->time = 0;
00000e  2000              MOVS     r0,#0
000010  72a8              STRB     r0,[r5,#0xa]
                  |L6.18|
;;;140      }
;;;141    }
000012  bd70              POP      {r4-r6,pc}
;;;142    /*---------------------------------------------------------------------------*/
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  entries
                          %        96

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  41646469          DCB      0x41,0x64,0x64,0x69
000004  6e67206e          DCB      0x6e,0x67,0x20,0x6e
000008  65696768          DCB      0x65,0x69,0x67,0x68
00000c  626f7220          DCB      0x62,0x6f,0x72,0x20
000010  77697468          DCB      0x77,0x69,0x74,0x68
000014  206c696e          DCB      0x20,0x6c,0x69,0x6e
000018  6b206164          DCB      0x6b,0x20,0x61,0x64
00001c  64726573          DCB      0x64,0x72,0x65,0x73
000020  73202530          DCB      0x73,0x20,0x25,0x30
000024  32783a25          DCB      0x32,0x78,0x3a,0x25
000028  3032783a          DCB      0x30,0x32,0x78,0x3a
00002c  25303278          DCB      0x25,0x30,0x32,0x78
000030  3a253032          DCB      0x3a,0x25,0x30,0x32
000034  783a2530          DCB      0x78,0x3a,0x25,0x30
000038  32783a25          DCB      0x32,0x78,0x3a,0x25
00003c  3032780a          DCB      0x30,0x32,0x78,0x0a
000040  00                DCB      0x00
