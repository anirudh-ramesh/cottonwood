; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Obj\emc28j60_uip.o --depend=.\Obj\emc28j60_uip.d --device=DARMSTM --apcs=interwork -O0 -I..\..\Libraries\CMSIS\Core\CM3 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Source\inc -I..\..\Libraries\uIP-1.0\apps\webserver -I..\..\Libraries\uIP-1.0\uip -I..\..\Source\src\uIP_enc28j60 -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\emc28j60_uip.crf ..\..\Source\src\uIP_enc28j60\emc28j60_uip.c]
                          THUMB

                          AREA ||i.etherdev_init||, CODE, READONLY, ALIGN=2

                  etherdev_init PROC
;;;42     */
;;;43     void etherdev_init(void)
000000  b510              PUSH     {r4,lr}
;;;44     {	 u8 i;
;;;45     
;;;46     	/*initialize enc28j60*/
;;;47     	enc28j60Init(mymac);					  
000002  480f              LDR      r0,|L1.64|
000004  f7fffffe          BL       enc28j60Init
;;;48     	//把IP地址和MAC地址写入各自的缓存区	ipaddr[] macaddr[]
;;;49     	init_ip_arp_udp_tcp(mymac,myip,mywwwport);
000008  480d              LDR      r0,|L1.64|
00000a  3020              ADDS     r0,r0,#0x20
00000c  f1a0011a          SUB      r1,r0,#0x1a
000010  6802              LDR      r2,[r0,#0]  ; mywwwport
000012  3820              SUBS     r0,r0,#0x20
000014  f7fffffe          BL       init_ip_arp_udp_tcp
;;;50     	for (i = 0; i < 6; i++)
000018  2400              MOVS     r4,#0
00001a  e005              B        |L1.40|
                  |L1.28|
;;;51     	{
;;;52     		uip_ethaddr.addr[i] = mymac[i];
00001c  4808              LDR      r0,|L1.64|
00001e  5d00              LDRB     r0,[r0,r4]
000020  4908              LDR      r1,|L1.68|
000022  5508              STRB     r0,[r1,r4]
000024  1c60              ADDS     r0,r4,#1              ;50
000026  b2c4              UXTB     r4,r0                 ;50
                  |L1.40|
000028  2c06              CMP      r4,#6                 ;50
00002a  dbf7              BLT      |L1.28|
;;;53     	}
;;;54         //指示灯状态:0x476 is PHLCON LEDA(绿)=links status, LEDB(红)=receive/transmit
;;;55         //enc28j60PhyWrite(PHLCON,0x7a4);
;;;56     	//PHLCON：PHY 模块LED 控制寄存器	
;;;57     	enc28j60PhyWrite(PHLCON,0x0476);	
00002c  f2404176          MOV      r1,#0x476
000030  2014              MOVS     r0,#0x14
000032  f7fffffe          BL       enc28j60PhyWrite
;;;58     	enc28j60clkout(2); // change clkout from 6.25MHz to 12.5MHz
000036  2002              MOVS     r0,#2
000038  f7fffffe          BL       enc28j60clkout
;;;59     
;;;60     }
00003c  bd10              POP      {r4,pc}
;;;61     
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      ||.data||
                  |L1.68|
                          DCD      uip_ethaddr

                          AREA ||i.etherdev_poll||, CODE, READONLY, ALIGN=1

                  etherdev_poll PROC
;;;106    */
;;;107    uint16_t etherdev_poll(void)
000000  2000              MOVS     r0,#0
;;;108    {
;;;109    	uint16_t bytes_read = 0;
;;;110    #if 0
;;;111    
;;;112    	/* tick_count threshold should be 12 for 0.5 sec bail-out
;;;113    		One second (24) worked better for me, but socket recycling
;;;114    		is then slower. I set UIP_TIME_WAIT_TIMEOUT 60 in uipopt.h
;;;115    		to counter this. Retransmission timing etc. is affected also. */
;;;116    	while ((!(bytes_read = etherdev_read())) && (timer0_tick() < 12)) continue;
;;;117    
;;;118    	timer0_reset();
;;;119    
;;;120    #endif
;;;121    	return bytes_read;
;;;122    }
000002  4770              BX       lr
                          ENDP


                          AREA ||i.etherdev_read||, CODE, READONLY, ALIGN=1

                  etherdev_read PROC
;;;74     
;;;75     uint16_t etherdev_read(uint8_t *p_char)
000000  b510              PUSH     {r4,lr}
;;;76     {
000002  4604              MOV      r4,r0
;;;77     	return enc28j60PacketReceive(1500,p_char);
000004  4621              MOV      r1,r4
000006  f24050dc          MOV      r0,#0x5dc
00000a  f7fffffe          BL       enc28j60PacketReceive
00000e  b280              UXTH     r0,r0
;;;78     }
000010  bd10              POP      {r4,pc}
;;;79     ////////////////////////////////////////////////////
                          ENDP


                          AREA ||i.etherdev_send||, CODE, READONLY, ALIGN=1

                  etherdev_send PROC
;;;68     */
;;;69     void etherdev_send(uint8_t *p_char, uint16_t length)
000000  b570              PUSH     {r4-r6,lr}
;;;70     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;71     	enc28j60PacketSend(length,p_char);
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       enc28j60PacketSend
;;;72     
;;;73     }
00000e  bd70              POP      {r4-r6,pc}
;;;74     
                          ENDP


                          AREA ||i.tcp_server_appcall||, CODE, READONLY, ALIGN=2

                  tcp_server_appcall PROC
;;;79     ////////////////////////////////////////////////////
;;;80     void tcp_server_appcall(void){		
000000  b510              PUSH     {r4,lr}
;;;81     	switch(uip_conn->lport) 
000002  4809              LDR      r0,|L5.40|
000004  6800              LDR      r0,[r0,#0]  ; uip_conn
000006  8880              LDRH     r0,[r0,#4]
000008  f5b04fa0          CMP      r0,#0x5000
00000c  d004              BEQ      |L5.24|
00000e  f5a04030          SUB      r0,r0,#0xb000
000012  3804              SUBS     r0,#4
000014  d106              BNE      |L5.36|
000016  e002              B        |L5.30|
                  |L5.24|
;;;82     	{
;;;83     		case HTONS(80):
;;;84     			httpd_appcall(); 
000018  f7fffffe          BL       httpd_appcall
;;;85     			break;
00001c  e002              B        |L5.36|
                  |L5.30|
;;;86     		case HTONS(1200):
;;;87     		    tcp_demo_appcall(); 
00001e  f7fffffe          BL       tcp_demo_appcall
;;;88     			break;
000022  bf00              NOP      
                  |L5.36|
000024  bf00              NOP                            ;85
;;;89     	}
;;;90     }
000026  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  |L5.40|
                          DCD      uip_conn

                          AREA ||.data||, DATA, ALIGN=2

                  mymac
000000  04023500          DCB      0x04,0x02,0x35,0x00
000004  0001              DCB      0x00,0x01
                  myip
000006  c0a8              DCB      0xc0,0xa8
000008  000f              DCB      0x00,0x0f
                  baseurl
00000a  6874              DCB      0x68,0x74
00000c  74703a2f          DCB      0x74,0x70,0x3a,0x2f
000010  2f313932          DCB      0x2f,0x31,0x39,0x32
000014  2e313638          DCB      0x2e,0x31,0x36,0x38
000018  2e302e31          DCB      0x2e,0x30,0x2e,0x31
00001c  352f0000          DCB      0x35,0x2f,0x00,0x00
                  mywwwport
                          DCD      0x00000050
                  myudpport
                          DCD      0x000004b0
